{"type":"getPostById","data":{"title":"如何将本地项目上传到 Github","date":"2019-12-02T01:38:36.000Z","description":"","categories":[{"name":"技术笔记","_id":"clzpq9ht6001lsger8yzb9r3x"}],"tags":[{"name":"Reprint","_id":"clzpq9htg0022sger2ks03l96"},{"name":"github","_id":"clzpq9hzn00cmsger2ku84bhy"}],"content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css\"><p>Reprint from <a href=\"https://www.cnblogs.com/smfx1314/p/8426115.html\">https://www.cnblogs.com/smfx1314/p/8426115.html</a></p>\n<p>使用 git 上传文件到 GitHub 需要 git 客户端以及注册 GitHub 账号。</p>\n<ul>\n<li>git 官网:<a href=\"https://git-scm.com/\">https://git-scm.com/</a></li>\n<li>github 官网:<a href=\"https://github.com/\">https://github.com/</a></li>\n</ul>\n<p>下面是具体的操作步骤：</p>\n<ul>\n<li>第一步：我们需要先创建一个本地的版本库（其实也就是一个文件夹）。你可以直接在桌面右击新建文件夹，也可以右击打开 Git bash 命令行窗口通过命令来创建。现在我通过命令行在桌面新建一个 test 文件夹（你也可以在其他任何地方创建这个文件夹），并且进入这个文件夹</li>\n<li>第二步：\n<ul>\n<li>在命令行中输入 git init 把这个文件夹变成 Git 可管理的仓库。这时你会发现 test 里面多了个.git 文件夹，它是 Git 用来跟踪和管理版本库的，因为它默认是隐藏文件，要是看不到就设置下文件夹和搜索选项。</li>\n<li>之后把需要上传到 GitHub 的文件全部复制到这 test 这个目录下。</li>\n<li>然后通过 git add .(注意这个 \".“，是有空格的，”.\" 代表这个 test 这个文件夹下的目录全部都提交。你也可以通过 git add 文件名  提交指定的文件) 把文件添加到缓存区或者指定具体文件提交.</li>\n<li> 然后可以通过 git status 命令，查看下现在的状态。看到有 css,js 文件夹的内容都提交上去了。</li>\n<li>然后，在使用命令 git commit -m “这里面写你的注释” 把文件提交的本地仓库</li>\n</ul>\n</li>\n<li>第三步：下面就到了连接远程仓库（也就是连接 Github）\n<ul>\n<li>由于本地 Git 仓库和 Github 仓库之间的传输是通过 SSH 加密的，所以连接时需要设置一下：创建 SSH KEY。先看一下你 C 盘用户目录下有没有.ssh 目录，有的话看下里面有没有 id_rsa 和 id_rsa.pub 这两个文件，有就跳到下一步，没有就通过下面命令创建</li>\n<li>然后一路回车。这时你就会在用户下的.ssh 目录里找到 id_rsa 和 id_rsa.pub 这两个文件 </li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">\"youremail@example.com\"</span></span><br></pre></td></tr></tbody></table></figure>\n<ul>\n<li>第四步：登录 Github, 找到右上角的图标，打开点进里面的 Settings，再选中里面的 SSH and GPG KEYS，点击右上角的 New SSH key，然后 Title 里面随便填，再把刚才 id_rsa.pub 里面的内容复制到 Title 下面的 Key 内容框里面，最后点击 Add SSH key，这样就完成了 SSH Key 的加密。</li>\n<li>第五步：在 Github 上创建一个 Git 仓库。你可以直接点 New repository 来创建，比如我创建了一个 tes2t 的仓库。</li>\n<li>第六步：在 Github 上创建好 Git 仓库之后我们就可以和本地仓库进行关联了，根据创建好的 Git 仓库页面的提示，可以在本地 test 仓库的命令行输入：</li>\n</ul>\n<figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add origin git@github.com:smfx1314/test2.git</span><br></pre></td></tr></tbody></table></figure>\n<ul>\n<li>第七步：关联好之后我们就可以把本地库的所有内容推送到远程仓库（也就是 Github）上了，通过：</li>\n</ul>\n<figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></tbody></table></figure>\n<p>由于新建的远程仓库是空的，所以要加上 - u 这个参数。然后进去 GitHub test2 这个仓库刷新下就会有已经上传的文件夹了。如果新建远程仓库不是空的，例如你勾选了 Initialize this repository with a README。那么你通过命令 $ git push -u origin master 是会报错的，这是由于你新创建的那个仓库里面的 README 文件不在本地仓库目录中，这时我们可以通过以下命令先将内容合并以下：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull --rebase origin master</span><br></pre></td></tr></tbody></table></figure>\n<p>再输入</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin master</span><br></pre></td></tr></tbody></table></figure>\n<p>等远程仓库里面有了内容之后，下次再从本地库上传内容的时候只需下面这样就可以了：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin master</span><br></pre></td></tr></tbody></table></figure>\n<p>至此就完成了将本地项目上传到 Github 的整个过程。</p>\n","_path":"20191202/ru-he-jiang-ben-di-xiang-mu-shang-chuan-dao-github/","_link":"https://yaoqs.github.io/20191202/ru-he-jiang-ben-di-xiang-mu-shang-chuan-dao-github/","_id":"clzpq9hxh008dsger03a5a4dw"}}