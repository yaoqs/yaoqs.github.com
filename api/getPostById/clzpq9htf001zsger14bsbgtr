{"type":"getPostById","data":{"title":"OpenCV 在 Csharp 中应用 OpenCVSharp","date":"2022-06-28T07:53:01.000Z","description":"","categories":[{"name":"技术笔记","_id":"clzpq9ht6001lsger8yzb9r3x"},{"name":"opencv","_id":"clzpq9htp002hsgerf69y01xm"}],"tags":[{"name":"opencv","_id":"clzpq9hv7004msgerffnr3eux"}],"content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css\"><h2 id=\"Opencv特辑\"><a class=\"header-anchor\" href=\"#Opencv特辑\">¶</a>Opencv 特辑</h2>\n<h3 id=\"OpenCV在Csharp中应用—OpenCVSharp\"><a class=\"header-anchor\" href=\"#OpenCV在Csharp中应用—OpenCVSharp\">¶</a>OpenCV 在 Csharp 中应用 —OpenCVSharp</h3>\n<h4 id=\"什么是OpenCVSharp\"><a class=\"header-anchor\" href=\"#什么是OpenCVSharp\">¶</a> 什么是 OpenCVSharp</h4>\n<p>之前一直是基于 OpenCV 开发视觉算法，但 C<ins> 语言对于 GUI 的开发相对于 C# 来说确实很不方便，之前就了解到 C# 下使用 OpenCV 可以使用 EmguCV，这段时间也确实是调通了，但是是通过把 C</ins> 封装成动态链接库在 C# 中调用，这样在修改算法的过程中就会非常的不方便，封装 DLL 的时候也比较麻烦。在 C# 中除了 Emgucv 之外，还有一种叫做 OpenCVSharp 的工具，从名字就可以看出其是 OpenCV 提供给 C# 的接口。<a href=\"http://xn--OpenCVSharpOpenCV-yr69a4z1q.NET\">OpenCVSharp 是 OpenCV 的.NET</a> wrapper，它比 Emgucv 更接近于原始的 OpenCV，并且有很多的样例参考，其采用 LGPL 发行，对商业应用友好（基本上相当于 BSD）。</p>\n<h4 id=\"OpenCVSharp有什么特点\"><a class=\"header-anchor\" href=\"#OpenCVSharp有什么特点\">¶</a>OpenCVSharp 有什么特点</h4>\n<p>直接封装了更多的 OpenCV 方法，降低了学习的难度，比 EmguCV 更便于使用大部分继承了 IDisposable 接口，方便使用 using 语句可以直接调用原始风格的 OpenCV 方法可以将图像对象直接转换成 GDI 使用的 Bitmap 和 WPF 的 WriteBitmap 支持 Mono。</p>\n<h4 id=\"OpenCVSharp在VS中的环境配置\"><a class=\"header-anchor\" href=\"#OpenCVSharp在VS中的环境配置\">¶</a>OpenCVSharp 在 VS 中的环境配置</h4>\n<p>相比较 OpenCV 配置比较麻烦，OpenCVSharp 和 EmguCV 一样，其不需额外的系统环境配置，只需要对项目进行简单的配置即可使用。安装 OpenCVSharp 有两种方式：一种是使用 NuGet（库程序包管理器）；另一种直接下载安装包。</p>\n<p>第一种方式：使用 NuGet（库程序包管理器），首先打开 VS，在【工具】选项中是否有【库程序包管理器】没有的话自己去安装好 NuGet. <a href=\"https://jingyan.baidu.com/article/066074d636fd19c3c21cb0a2.html\">https://jingyan.baidu.com/article/066074d636fd19c3c21cb0a2.html</a>（转载自百度）安装好之后，打开【工具】-&gt;【库程序包管理器】-&gt;【管理解决方案的 NuGet 程序包】，在其中搜索 OpenCVSharp&gt;，选择合适的点击【安装】（最好安装最新的）。一直等待完成。完成安装之后，需要将安装文件的 DLL 文件放置在项目可执行文件的 Debug 文件夹下.</p>\n<p>第二种方式是直接下载安装包 <a href=\"https://github.com/shimat/opencvsharp/releases\">https://github.com/shimat/opencvsharp/releases</a> 下载好之后解压到一个文件夹（任意的文件夹）VS 中 OpenCVSharp 的配置    文件安装好之后，在【解决方案】中右键【引用】-&gt;【添加引用】，选择【浏览】，将下载文件中的 OpenCvSharp.dll 文件添加进引用。将下载文件中的 OpenCvSharpExtern.dll 复制到可执行文件的 Debug 文件夹下，所有配置 OK，下面测试是否配置成功。</p>\n<h4 id=\"测试代码\"><a class=\"header-anchor\" href=\"#测试代码\">¶</a> 测试代码</h4>\n<figure class=\"highlight cs\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OpenCvSharp;</span><br><span class=\"line\"> <span class=\"comment\">//添加相应的引用即可</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">OpenCVSharpTest2</span></span><br><span class=\"line\">{</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        {</span><br><span class=\"line\">            Mat source = <span class=\"keyword\">new</span> Mat(<span class=\"string\">@\"1.bmp\"</span>, ImreadModes.Color);</span><br><span class=\"line\">            Cv2.ImShow(<span class=\"string\">\"Demo\"</span>, source);</span><br><span class=\"line\">            Cv2.WaitKey(<span class=\"number\">0</span>);</span><br><span class=\"line\">        }</span><br><span class=\"line\">}</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>————————————————<br>\n版权声明：本文为 CSDN 博主「jameshater」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：<a href=\"https://blog.csdn.net/jameshater/article/details/79642384\">https://blog.csdn.net/jameshater/article/details/79642384</a></p>\n","_path":"20220628/opencv-zai-csharp-zhong-ying-yong-opencvsharp/","_link":"https://yaoqs.github.io/20220628/opencv-zai-csharp-zhong-ying-yong-opencvsharp/","_id":"clzpq9htf001zsger14bsbgtr"}}