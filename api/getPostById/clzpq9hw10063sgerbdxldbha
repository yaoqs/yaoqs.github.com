{"type":"getPostById","data":{"title":"cookie 专题","date":"2024-12-11T03:20:38.373Z","description":"","categories":[{"name":"专题","_id":"clzpq9hta001rsger1kx28gvd"}],"tags":[{"name":"专题","_id":"clzpq9hu0002xsgerfltn8246"},{"name":"javascript","_id":"clzpq9hu70035sger6vjwd5mk"}],"content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css\"><p>转载</p>\n<h1>javascript 设置 cookie</h1>\n<h2 id=\"设置cookie\"><a class=\"header-anchor\" href=\"#设置cookie\">¶</a> 设置 cookie</h2>\n<p>每个 cookie 都是一个名 / 值对，可以把下面这样一个字符串赋值给</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>：</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=828\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>如果要一次存储多个名 / 值对，可以使用分号加空格（;）隔开，例如：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=828;userName=yaoqs\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>在 cookie 的名或值中不能使用分号（;）、逗号（,）、等号（=）以及空格。在 cookie 的名中做到这点很容易，但要保存的值是不确定的。如何来存储这些值呢？方法是用 escape () 函数进行编码，它能将一些特殊符号使用十六进制表示，例如空格将会编码为 “20%”，从而可以存储于 cookie 值中，而且使用此种方案还可以避免中文乱码的出现。例如：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"str=\"</span>+<span class=\"built_in\">escape</span>(<span class=\"string\">\"Iloveajax\"</span>);</span><br><span class=\"line\">相当于：</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"str=I%20love%20ajax\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>当使用 escape () 编码后，在取出值以后需要使用 unescape () 进行解码才能得到原来的 cookie 值。尽管 document.cookie 看上去就像一个属性，可以赋不同的值。但它和一般的属性不一样，改变它的赋值并不意味着丢失原来的值，例如连续执行下面两条语句：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=828\"</span>;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userName=yaoqs\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>这时浏览器将维护两个 cookie，分别是 userId 和 userName，因此给 document.cookie 赋值更像执行类似这样的语句：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addCookie</span>(<span class=\"string\">\"userId=828\"</span>);</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addCookie</span>(<span class=\"string\">\"userName=yaoqs\"</span>);</span><br></pre></td></tr></tbody></table></figure>\n<p>事实上，浏览器就是按照这样的方式来设置 cookie 的，如果要改变一个 cookie 的值，只需重新赋值，例如：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=929\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>这样就将名为 userId 的 cookie 值设置为了 929。</p>\n<h2 id=\"获取cookie的值\"><a class=\"header-anchor\" href=\"#获取cookie的值\">¶</a> 获取 cookie 的值</h2>\n<p>下面介绍如何获取 cookie 的值。cookie 的值可以由 document.cookie 直接获得：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> strCookie=<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>这将获得以分号隔开的多个名 / 值对所组成的字符串，这些名 / 值对包括了该域名下的所有 cookie</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=828\"</span>;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userName=yaoqs\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> strCookie=<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>;</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(strCookie);</span><br></pre></td></tr></tbody></table></figure>\n<p>名称来获得指定的值，这正是处理 cookie 值最麻烦的一部分。用户必须自己分析这个字符串，来获取指定的 cookie 值，例如，要获取 userId 的值，可以这样实现：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//设置两个cookie</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=828\"</span>;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userName=yaoqs\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//获取cookie字符串</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> strCookie=<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>;</span><br><span class=\"line\"><span class=\"comment\">//将多cookie切割为多个名/值对</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrCookie=strCookie.<span class=\"title function_\">split</span>(<span class=\"string\">\";\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> userId;</span><br><span class=\"line\"><span class=\"comment\">//遍历cookie数组，处理每个cookie对</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(vari=<span class=\"number\">0</span>;i&lt;arrCookie.<span class=\"property\">length</span>;i++){</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr=arrCookie[i].<span class=\"title function_\">split</span>(<span class=\"string\">\"=\"</span>);</span><br><span class=\"line\">  <span class=\"comment\">//找到名称为userId的cookie，并返回它的值</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"string\">\"userId\"</span>==arr[<span class=\"number\">0</span>]){</span><br><span class=\"line\">  userId=arr[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(userId);</span><br></pre></td></tr></tbody></table></figure>\n<p>用类似的方法，可以获取一个或多个 cookie 的值，其主要的技巧仍然是字符串和数组的相关操作。给 cookie 设置终止日期到现在为止，所有的 cookie 都是单会话 cookie，即浏览器关闭后这些 cookie 将会丢失，事实上这些 cookie 仅仅是存储在内存中，而没有建立相应的硬盘文件。在实际开发中，cookie 常常需要长期保存，例如保存用户登录的状态。这可以用下面的选项来实现：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=828;expires=GMT_String\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>其中 GMT_String 是以 GMT 格式表示的时间字符串，这条语句就是将 userId 这个 cookie 设置为 GMT_String 表示的过期时间，超过这个时间，cookie 将消失，不可访问。例如：如果要将 cookie 设置为 10 天后过期，可以这样实现：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">vardate=<span class=\"title function_\">newDate</span>();</span><br><span class=\"line\">varexpireDays=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">//将date设置为10天以后的时间</span></span><br><span class=\"line\">date.<span class=\"title function_\">setTime</span>(date.<span class=\"title function_\">getTime</span>()+expireDays*<span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">1000</span>);</span><br><span class=\"line\"><span class=\"comment\">//将userId和userName两个cookie设置为10天后过期</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=828;userName=yaoqs;expire=\"</span>+date.<span class=\"title function_\">toGMTString</span>();</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"删除cookie\"><a class=\"header-anchor\" href=\"#删除cookie\">¶</a> 删除 cookie</h2>\n<p>为了删除一个 cookie，可以将其过期时间设定为一个过去的时间，例如：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">vardate=<span class=\"title function_\">newDate</span>();</span><br><span class=\"line\"><span class=\"comment\">//将date设置为过去的时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">date.<span class=\"title function_\">setTime</span>(date.<span class=\"title function_\">getTime</span>()-<span class=\"number\">10000</span>);</span><br><span class=\"line\"><span class=\"comment\">//将userId这个cookie删除</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=828;expire=\"</span>+date.<span class=\"title function_\">toGMTString</span>();</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"指定可访问cookie的路径\"><a class=\"header-anchor\" href=\"#指定可访问cookie的路径\">¶</a> 指定可访问 cookie 的路径</h2>\n<p>默认情况下，如果在某个页面创建了一个 cookie，那么该页面所在目录中的其他页面也可以访问该 cookie。如果这个目录下还有子目录，则在子目录中也可以访问。。为了控制 cookie 可以访问的目录，需要使用 path 参数设置 cookie，语法如下：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"name=value;path=cookieDir\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>其中 cookieDir 表示可访问 cookie 的目录。例如：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=320;path=/shop\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>就表示当前 cookie 仅能在 shop 目录下使用。如果要使 cookie 在整个网站下可用，可以将 cookie_dir 指定为根目录，例如：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"userId=320;path=/\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"指定可访问cookie的主机名\"><a class=\"header-anchor\" href=\"#指定可访问cookie的主机名\">¶</a> 指定可访问 cookie 的主机名</h2>\n<p>和路径类似，主机名是指同一个域下的不同主机。默认情况下，一个主机中创建的 cookie 在另一个主机下是不能被访问的，但可以通过 domain 参数来实现对其的控制，其语法格式为：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"name=value;domain=cookieDomain\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>以 google 为例，要实现跨主机访问，可以写为：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=<span class=\"string\">\"name=value;domain=.google.com\"</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>这样，所有 google.com 下的主机都可以访问该 cookie。</p>\n<h2 id=\"综合示例\"><a class=\"header-anchor\" href=\"#综合示例\">¶</a> 综合示例</h2>\n<p>构造通用的 cookie 处理函数 cookie 的处理过程比较复杂，并具有一定的相似性。因此可以定义几个函数来完成 cookie 的通用操作，从而实现代码的复用。下面列出了常用的 cookie 操作及其函数实现。</p>\n<ol>\n<li>添加一个 cookie：addCookie (name,value,expireHours)<br>\n该函数接收 3 个参数：cookie 名称，cookie 值，以及在多少小时后过期。这里约定 expireHours 为 0 时不设定过期时间，即当浏览器关闭时 cookie 自动消失。该函数实现如下：</li>\n</ol>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addCookie</span>(<span class=\"params\">name,value,expireHours</span>){</span><br><span class=\"line\"><span class=\"keyword\">var</span> cookieString=name+<span class=\"string\">\"=\"</span>+<span class=\"built_in\">escape</span>(value);</span><br><span class=\"line\"><span class=\"comment\">//判断是否设置过期时间</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(expireHours&gt;<span class=\"number\">0</span>){</span><br><span class=\"line\"><span class=\"keyword\">var</span> date=<span class=\"title function_\">newDate</span>();</span><br><span class=\"line\">date.<span class=\"title function_\">setTime</span>(date.<span class=\"property\">getTime</span>+expireHours*<span class=\"number\">3600</span>*<span class=\"number\">1000</span>);</span><br><span class=\"line\">cookieString=cookieString+<span class=\"string\">\";expire=\"</span>+date.<span class=\"title function_\">toGMTString</span>();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=cookieString;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>获取指定名称的 cookie 值：getCookie (name)<br>\n该函数返回名称为 name 的 cookie 值，如果不存在则返回空，其实现如下：</li>\n</ol>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getCookie</span>(<span class=\"params\">name</span>){</span><br><span class=\"line\"><span class=\"keyword\">var</span> strCookie=<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrCookie=strCookie.<span class=\"title function_\">split</span>(<span class=\"string\">\";\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(vari=<span class=\"number\">0</span>;i&lt;arrCookie.<span class=\"property\">length</span>;i++){</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=arrCookie[i].<span class=\"title function_\">split</span>(<span class=\"string\">\"=\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(arr[<span class=\"number\">0</span>]==name)returnarr[<span class=\"number\">1</span>];</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getCookie</span>(<span class=\"params\">cookie_name</span>){</span><br><span class=\"line\"><span class=\"keyword\">var</span> results=<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">match</span>(<span class=\"string\">'(^|;)?'</span>+cookie_name+<span class=\"string\">'=([^;]*)(;|$)'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(results)</span><br><span class=\"line\"><span class=\"keyword\">return</span>(<span class=\"built_in\">unescape</span>(results[<span class=\"number\">2</span>]));</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>删除指定名称的 cookie：deleteCookie (name)<br>\n该函数可以删除指定名称的 cookie，其实现如下：</li>\n</ol>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deleteCookie</span>(<span class=\"params\">name</span>){</span><br><span class=\"line\"><span class=\"keyword\">var</span> date=<span class=\"title function_\">newDate</span>();</span><br><span class=\"line\">date.<span class=\"title function_\">setTime</span>(date.<span class=\"title function_\">getTime</span>()-<span class=\"number\">10000</span>);</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>=name+<span class=\"string\">\"=v;expire=\"</span>+date.<span class=\"title function_\">toGMTString</span>();</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>我们已经知道，在 document 对象中有一个 cookie 属性。但是 Cookie 又是什么？“某些 Web 站点在您的硬盘上用很小的文本文件存储了一些信息，这些文件就称为 Cookie。”——MSIE 帮助。一般来说，Cookies 是 CGI 或类似，比 HTML 高级的文件、程序等创建的，但是 javascript 也提供了对 Cookies 的很全面的访问权利。</p>\n<p>我们先要学一学 Cookie 的基本知识。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　每个Cookie都是这样的：&lt; cookie名 &gt;=&lt; 值 &gt;</span><br><span class=\"line\">　　&lt; cookie名 &gt;的限制与javascript的命名限制大同小异，少了“不能用javascript关键字”，多了“只能用可以用在URL编码中的字符”。后者比较难懂，但是只要你只用字母和数字命名，就完全没有问题了。&lt;值&gt;的要求也是“只能用可以用在URL编码中的字符”。</span><br></pre></td></tr></tbody></table></figure>\n<p>每个 Cookie 都有失效日期，一旦电脑的时钟过了失效日期，这个 Cookie 就会被删掉。我们不能直接删掉一个 Cookie，但是可以用设定失效日期早于现在时刻的方法来间接删掉它。</p>\n<p>每个网页，或者说每个站点，都有它自己的 Cookies，这些 Cookies 只能由这个站点下的网页来访问，来自其他站点或同一站点下未经授权的区域的网页，是不能访问的。每一 “组” Cookies 有规定的总大小（大约 2KB 每 “组”），一超过最大总大小，则最早失效的 Cookie 先被删除，来让新的 Cookie “安家”。</p>\n<p>现在我们来学习使用 documents.cookie 属性。</p>\n<p>如果直接使用 documents.cookie 属性，或者说，用某种方法，例如给变量赋值，来获得 documents.cookie 的值，我们就可以知道在现在的文档中有多少个 Cookies，每个 Cookies 的名字，和它的值。例如，在某文档中添加 “document.write (documents.cookie)”，结果显示：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name=yaoqs;email=yaoqs@yaoqs.com;lastvisited=index.html</span><br></pre></td></tr></tbody></table></figure>\n<p>这意味着，文档包含 3 个 Cookies：name,email 和 lastvisited。可以看到，两个 Cookies 之间是用分号和空格隔开的，于是我们可以用 cookieString.split (‘;’) 方法得到每个 Cookie 分开的一个数组（先用 varcookieString=documents.cookie）。</p>\n<p>设定一个 Cookie 的方法是对 documents.cookie 赋值。与其它情况下的赋值不同，向 documents.cookie 赋值不会删除掉原有的 Cookies，而只会增添 Cookies 或更改原有 Cookie。赋值的格式：</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">documents.<span class=\"property\">cookie</span>=<span class=\"string\">'cookieName='</span>+<span class=\"built_in\">escape</span>(<span class=\"string\">'cookievalue'</span>)+<span class=\"string\">';expires='</span>+expirationDateObj.<span class=\"title function_\">toGMTString</span>();</span><br></pre></td></tr></tbody></table></figure>\n<p>是不是看到头晕了呢？cookieName 表示 Cookie 的名称，cookievalue 表示 Cookie 的值，expirationDateObj 表示储存着失效日期的日期对象名，如果不需要指定失效日期，则不需要第二行。不指定失效日期，则浏览器默认是在关闭浏览器（也就是关闭所有窗口）之后过期。</p>\n<p>首先 escape () 方法：为什么一定要用？因为 Cookie 的值的要求是 “只能用可以用在 URL 编码中的字符”。我们知道 “escape ()” 方法是把字符串按 URL 编码方法来编码的，那我们只需要用一个 “escape ()” 方法来处理输出到 Cookie 的值，用 “unescape ()” 来处理从 Cookie 接收过来的值就万无一失了。而且这两个方法的最常用途就是处理 Cookies。其实设定一个 Cookie 只是 “documents.cookie=‘cookieName=cookievalue’” 这么简单，但是为了避免在 cookievalue 中出现 URL 里不准出现的字符，还是用一个 escape () 好。　　然后 “expires” 前面的分号：注意到就行了。是分号而不是其他。　　最后 toGMTString () 方法：设定 Cookie 的时效日期都是用 GMT 格式的时间的，其它格式的时间是没有作用的。</p>\n<p>现在我们来实战一下。设定一个 “name=rose” 的 Cookie，在 3 个月后过期。</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> expires=<span class=\"title function_\">newDate</span>();</span><br><span class=\"line\">expires.<span class=\"title function_\">setTime</span>(expires.<span class=\"title function_\">getTime</span>()+<span class=\"number\">3</span>*<span class=\"number\">30</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>);</span><br><span class=\"line\"><span class=\"comment\">/*三个月x一个月当作30天x一天24小时</span></span><br><span class=\"line\"><span class=\"comment\">x一小时60分x一分60秒x一秒1000毫秒*/</span></span><br><span class=\"line\">documents.<span class=\"property\">cookie</span>=<span class=\"string\">'name=rose;expires='</span>+expires.<span class=\"title function_\">toGMTString</span>();</span><br></pre></td></tr></tbody></table></figure>\n<p>为什么没有用 escape () 方法？这是因为我们知道 rose 是一个合法的 URL 编码字符串，也就是说，‘rose’==escape (‘rose’)。一般来说，如果设定 Cookie 时不用 escape ()，那获取 Cookie 时也不用 unescape ()。</p>\n<p>再来一次：编写一个函数，作用是查找指定 Cookie 的值。</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getCookie</span>(<span class=\"params\">cookieName</span>){</span><br><span class=\"line\"><span class=\"keyword\">var</span> cookieString=documents.<span class=\"property\">cookie</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> start=cookieString.<span class=\"title function_\">indexOf</span>(cookieName+<span class=\"string\">'='</span>);</span><br><span class=\"line\"><span class=\"comment\">//加上等号的原因是避免在某些Cookie的值里有</span></span><br><span class=\"line\"><span class=\"comment\">//与cookieName一样的字符串。</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(start==-<span class=\"number\">1</span>)<span class=\"comment\">//找不到</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">start+=cookieName.<span class=\"property\">length</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> end=cookieString.<span class=\"title function_\">indexOf</span>(<span class=\"string\">';'</span>,start);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(end==-<span class=\"number\">1</span>)<span class=\"title function_\">returnunescape</span>(cookieString.<span class=\"title function_\">substring</span>(start));</span><br><span class=\"line\"><span class=\"title function_\">returnunescape</span>(cookieString.<span class=\"title function_\">substring</span>(start,end));</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>这个函数用到了字符串对象的一些方法，如果你不记得了（你是不是这般没记性啊），请快去查查。这个函数所有的 if 语句都没有带上 else，这是因为如果条件成立，程序运行的都是 return 语句，在函数里碰上 return，就会终止运行，所以不加 else 也没问题。该函数在找到 Cookie 时，就会返回 Cookie 的值，否则返回 “null”。</p>\n<p>现在我们要删除刚才设定的 name=roseCookie。</p>\n<figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> expires=<span class=\"title function_\">newDate</span>();</span><br><span class=\"line\">expires.<span class=\"title function_\">setTime</span>(expires.<span class=\"title function_\">getTime</span>()-<span class=\"number\">1</span>);</span><br><span class=\"line\">documents.<span class=\"property\">cookie</span>=<span class=\"string\">'name=rose;expires='</span>+expires.<span class=\"title function_\">toGMTString</span>();</span><br></pre></td></tr></tbody></table></figure>\n<p>可以看到，只需要把失效日期改成比现在日期早一点（这里是早 1 毫秒），再用同样的方法设定 Cookie，就可以删掉 Cookie 了。</p>\n","_path":"20241211/cookie-zhuan-ti/","_link":"https://yaoqs.github.io/20241211/cookie-zhuan-ti/","_id":"clzpq9hw10063sgerbdxldbha"}}